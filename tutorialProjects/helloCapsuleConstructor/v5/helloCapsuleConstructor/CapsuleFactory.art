[[rt::decl]]
`
    #include "Greeter.h"

    template <class T>
    class CapsuleFactory : public RTActorFactoryInterface{
        public:
            CapsuleFactory(std::string firstName, std::string lastName)
            : _firstName(firstName), _lastName(lastName){};

            RTActor *create(RTController *rtg_rts, RTActorRef *rtg_ref, int index) override{
                return new T(rtg_rts, rtg_ref, _firstName, _lastName);
            }

            void destroy(RTActor* actor) override{
                delete actor;
            }

            static CapsuleFactory<T> factory;

        private:
            std::string _firstName;
            std::string _lastName;
    };
`

[[rt::impl]]
`
    template<>
    CapsuleFactory<Greeter_Actor> CapsuleFactory<Greeter_Actor>::factory("Donald", "Duck");
`